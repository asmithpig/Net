@model PagedResultSetModel<ProductResponseModel>
@{
    ViewData["Title"] = "Products by Category";
}

<h1>Products by Category</h1>
<div class="main-content">
    <div class="section-content section-content-p30">
        <h4>Category: @ViewData["categoryName"]</h4>
        <hr />
        <div class="container-fluid">
            <div class="row">
                <!-- loop over the collection of products -->
                @foreach (var m in Model.PagedData)
                {
                    <div class="col-md-3">
                        <partial name="_ProductCard" model="m" />
                    </div>
                }
                <!-- if products empty then display a message -->
                @if (Model.PagedData.ToList().Count == 0)
                {
                    <div class="alert alert-warning col-md-12" role="alert">No products found.
                    </div>
                }
            </div>
            <!-- begin footer -->
            @{
                var previousDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            }
            
            <a class="btn btn-primary @previousDisabled" asp-action="Category" asp-controller="Product" 
               asp-route-categoryName="@ViewData["categoryName"]" asp-route-pageSize="@Model.PageSize"
               asp-route-pageNumber="@(Model.PageNumber - 1)">
                Previous
            </a>
            
            <a class="btn btn-primary @nextDisabled" asp-action="Category"  asp-controller="Product"
               asp-route-categoryName="@ViewData["categoryName"]" asp-route-pageSize="@Model.PageSize" 
               asp-route-pageNumber="@(Model.PageNumber + 1)">
                Next
            </a>
        </div>
    </div>
</div>